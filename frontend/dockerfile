# FROM nginx:alpine

# RUN rm -rf /etc/nginx/conf.d/default.conf
# COPY /nginx/default.conf /etc/nginx/conf.d/default.conf

# 만약 /build 디렉토리가 존재하지 않는다면 생성합니다.
# RUN [ ! -d /build ] && mkdir -p /build

# /build 디렉토리에 파일 복사
# COPY /build /usr/share/nginx/html

# EXPOSE 80
# ENTRYPOINT ["nginx", "-g", "daemon off;"]


# 빌드 단계
#FROM node:14 AS builder

#WORKDIR /frontend
#COPY . .

#RUN npm install
#RUN npm run build 

# 서빙 단계
#FROM nginx:alpine

#COPY --from=builder /app/dist /usr/share/nginx/html

#EXPOSE 80

#CMD ["nginx", "-g", "daemon off;"]

# ---
# 프론트엔드 도커파일
FROM nginx:alpine

# Nginx의 기본 설정 파일 삭제
RUN rm /etc/nginx/conf.d/default.conf

# Nginx를 위한 사용자 정의 설정 파일 복사
COPY nginx.conf /etc/nginx/conf.d/

# 빌드된 프론트엔드 애플리케이션 파일 복사
COPY /build /usr/share/nginx/html

# 포트 80을 노출
EXPOSE 3000

# Nginx를 백그라운드에서 실행
CMD ["nginx", "-g", "daemon off;"]


